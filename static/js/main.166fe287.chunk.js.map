{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","redux/filterActions.js","redux/contactsActions.js","App.js","redux/reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","phoneInputId","handleChange","e","setValue","currentTarget","value","reset","className","Styles","form","preventDefault","htmlFor","label","input","type","pattern","title","required","id","onChange","btn","ContactsList","this","props","filter","contacts","onDeleteContact","filteredContacts","contact","toLowerCase","includes","map","styles","onClick","React","Component","Filter","handleFilter","updateFilter","createAction","addContact","deleteContact","connect","state","items","contactsReducer","dispatch","onContactAdd","onContactDelete","onFilterUpdate","useEffect","localStorage","setItem","JSON","stringify","length","initialState","parse","getItem","itemsReducer","createReducer","action","payload","find","c","filterReducer","_","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.166fe287.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__3y96C\",\"btn\":\"ContactsList_btn__knUal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Filter_contact__33y4H\"};","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport Styles from \"./Form.module.css\";\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const phoneInputId = shortid.generate();\n\n  const handleChange = (e, setValue) => {\n    const { value } = e.currentTarget;\n    setValue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={Styles.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId} className={Styles.label}>\n        Name\n        <input\n          className={Styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameInputId}\n          onChange={(e) => handleChange(e, setName)}\n          value={name}\n        />\n      </label>\n      <label htmlFor={phoneInputId}>\n        Phone number\n        <input\n          className={Styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={(e) => handleChange(e, setNumber)}\n          value={number}\n        />\n      </label>\n      <button className={Styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport styles from \"./ContactsList.module.css\";\n\nclass ContactsList extends React.Component {\n  render() {\n    const { filter, contacts, onDeleteContact } = this.props;\n\n    const filteredContacts = filter\n      ? contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contacts;\n\n    return (\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li className={styles.contact} key={id}>\n            {name}: {number}\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ContactsList;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ filter, handleFilter }) => (\n  <input className={styles.contact} value={filter} onChange={handleFilter} />\n);\n\nexport default Filter;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const updateFilter = createAction(\"filter/update\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\");\nexport const deleteContact = createAction(\"contacts/delete\");\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\nimport { updateFilter } from \"./redux/filterActions\";\nimport { addContact, deleteContact } from \"./redux/contactsActions\";\n\nfunction App({ items, filter, onContactAdd, onContactDelete, onFilterUpdate }) {\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={(name, number) => onContactAdd({ name, number })} />\n      {items.length > 0 && (\n        <>\n          <h1>Contacts</h1>\n          <Filter\n            filter={filter}\n            handleFilter={(e) => onFilterUpdate(e.currentTarget.value)}\n          />\n          <ContactsList\n            filter={filter}\n            contacts={items}\n            onDeleteContact={(id) => onContactDelete({ id })}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  items: state.contactsReducer.items,\n  filter: state.contactsReducer.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onContactAdd: (value) => dispatch(addContact(value)),\n  onContactDelete: (value) => dispatch(deleteContact(value)),\n  onFilterUpdate: (value) => dispatch(updateFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\nimport { addContact, deleteContact } from \"./contactsActions\";\nimport { updateFilter } from \"./filterActions\";\n\nconst initialState = JSON.parse(localStorage.getItem(\"contacts\") ?? \"[]\");\n\nconst itemsReducer = createReducer(initialState, {\n  [addContact]: (state, action) => {\n    const { name, number } = action.payload;\n\n    if (state.find((contact) => contact.name === name)) {\n      return state;\n    }\n\n    return [...state, { id: shortid.generate(), name, number }];\n  },\n  [deleteContact]: (state, action) =>\n    state.filter((c) => c.id !== action.payload.id),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [updateFilter]: (_, action) => action.payload ?? \"\",\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsReducer } from \"./reducers\";\n\nconst store = configureStore({\n  reducer: {\n    contactsReducer,\n  },\n});\n\nexport default store;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__e6Ctk\",\"btn\":\"Form_btn__2T1lW\",\"input\":\"Form_input__1NAZ9\"};"],"sourceRoot":""}